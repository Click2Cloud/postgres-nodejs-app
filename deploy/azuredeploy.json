{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "webSiteName": "[concat('nodejs', uniqueString(resourceGroup().id))]",
    "serverName": "[concat('postgresql', uniqueString(resourceGroup().id))]",
    "databaseName": "dayplanner",
    "hostingPlanName": "[concat(variables('webSiteName'),'-plan')]",
    "skuTierPG": "Basic",
    "skuNamePG": "PGSQLS3M100"
  },
  "parameters": {
    "AppServicePlan": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "workerSize": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "allowedValues": [
        0,
        1,
        2
      ],
      "metadata": {
        "description": "The instance size of the hosting plan (small, medium, or large)"
      }
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/Click2Cloud/postgres-nodejs-app.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "PostgreSQLComputeUnit": {
      "type": "int",
      "defaultValue": 50,
      "minValue": 50,
      "maxValue": 100,
      "metadata": {
        "description": "The PostgreSQL database Compute Unit to use."
      }
    },
    "PostgreSQLStorageGB": {
      "type": "int",
      "defaultValue": 50,
      "minValue": 50,
      "maxValue": 1050,
      "metadata": {
        "description": "The PostgreSQL database storage size to use. (Can be increased by 125 GB)"
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The PostgreSQL database administrator username to use."
      }
    },
    "administratorPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The PostgreSQL database administrator password to use. The password must contain character from three of the following categories – English uppercase letters, English lowercase letters, number (0-9), and non-alphanumeric characters (!, $, #, %)."
      }
    },
    "PostgreSQLVersion": {
      "type": "string",
      "defaultValue": "9.6",
      "allowedValues": [
        "9.5",
        "9.6"
      ],
      "metadata": {
        "description": "The PostgreSQL version to use."
      }
    },
    "PostgreSQLLocation": {
      "type": "string",
      "defaultValue": "Southeast Asia",
      "allowedValues": [
        "East Asia",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "The PostgreSQL database location to use."
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2016-02-01-privatepreview",
      "name": "[variables('serverName')]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "sku": {
        "name": "[variables('skuNamePG')]",
        "tier": "[variables('skuTierPG')]",
        "capacity": "[parameters('PostgreSQLComputeUnit')]",
        "size": "[parameters('PostgreSQLStorageGB')]"
      },
      "location": "[parameters('PostgreSQLLocation')]",
      "properties": {
        "version": "[parameters('PostgreSQLVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorPassword')]",
        "storageMB": "[parameters('PostgreSQLStorageGB')]"
      },
      "resources": [
        {
          "apiVersion": "2017-04-30-preview",
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[parameters('PostgreSQLLocation')]",
          "tags": {
            "displayName": "PSQLDatabase"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
          ],
          "properties": {
          }
        },
        {
          "apiVersion": "2017-04-30-preview",
          "name": "PSQLServerFirewallRule",
          "type": "firewallrules",
          "location": "[parameters('PostgreSQLLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
          ],
          "properties": {
            "endIpAddress": "255.255.255.255",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('AppServicePlan')]",
        "capacity": "[parameters('workerSize')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('webSiteName'))]",
            "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
          ],
          "properties": {
            "DefaultConnection": {
              "value": "[concat('postgres://', parameters('administratorLogin'), '@',  variables('serverName'), ':', uriComponent(parameters('administratorPassword')), '@', reference(resourceId('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))).fullyQualifiedDomainName, ':5432/', variables('databaseName'), '?ssl=true')]",
              "type": "PostgreSQL"
            }
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('webSiteName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoUrl')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "AutoScaleSettings"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": 1,
              "maximum": 2,
              "default": 1
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": false,
        "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      }
    }
  ]
}
